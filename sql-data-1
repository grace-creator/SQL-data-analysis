Select * 
from new_schema.covid_deaths
where continent is not null
order by 3,4

-- Select * 
-- from new_schema.covid_vaccinations
-- order by 3,4

-- Select Data that we are going to be using

Select Location, date, total_cases, new_cases, total_deaths, population
from new_schema.covid_deaths
where continent is not null
order by 1,2

--  total cases vs total deaths
-- likelihood of dying if you contract covid in your conuntry
Select Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
from new_schema.covid_deaths
where location like '%states%'
where continent is not null
order by 1,2

-- total cases vs population 
-- percentage of population who got positive test of covid
Select Location, date, Population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
from new_schema.covid_deaths
-- where location like '%states%'
order by 1,2;


-- European Union 
Select location, SUM(cast(new_deaths as float)) as TotalDeathCount
From new_schema.covid_deaths
-- where location like '%states%' 
Where continent is null 
and location not in ('World', 'European Union', 'International', 'High Income', 'Upper middle income', 'Lower middle income', 'Low income')
Group by location 
order by TotalDeathCount desc;


-- Look at countries with highest infection rate compared to population
Select Location, Population, MAX(cast(total_cases as float)) as HighestInfectionCount, MAX(total_cases/population)*100 as PercentPopulationInfected
from new_schema.covid_deaths
-- where location like '%states%'
-- where continent is not null
GROUP BY Location, Population
order by PercentPopulationInfected desc 


-- Same as above plus date. Look at countries with highest infection rate compared to population, plus date
Select Location, Population, date, MAX(cast(total_cases as float)) as HighestInfectionCount, MAX(total_cases/population)*100 as PercentPopulationInfected
from new_schema.covid_deaths
-- where location like '%states%'
-- where continent is not null
GROUP BY Location, Population, date
order by PercentPopulationInfected desc; 



-- Continent
-- Showing countries wiht highest death count per population
-- Select location, MAX(cast(total_deaths as decimal)) as TotalDeathCount
-- from new_schema.covid_deaths
-- -- where location like '%states%'
-- where continent is null
-- Group by location
-- order by TotalDeathCount desc 


-- Continent
-- Showing countries wiht highest death count per population
Select continent, MAX(cast(total_deaths as decimal)) as TotalDeathCount
from new_schema.covid_deaths
-- where location like '%states%'
where continent is not null
Group by continent
order by TotalDeathCount desc 



-- Showing countries wiht highest death count per population
Select Location, MAX(cast(total_deaths as decimal)) as TotalDeathCount
from new_schema.covid_deaths
-- where location like '%states%'
where continent is not null
Group by Location
order by TotalDeathCount desc 


-- Global numbers
Select date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as float)) as total_deaths, SUM(cast(new_deaths as float))/SUM(new_cases)*100 as DeathPercentage
from new_schema.covid_deaths
where continent is not NULL
Group by date
order by 1,2;



-- Total numbers
Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as float)) as total_deaths, SUM(cast(new_deaths as float))/SUM(new_cases)*100 as DeathPercentage
from new_schema.covid_deaths
where continent is not NULL
-- Group by date
order by 1,2;



-- Total population vs vaccinations
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as float)) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated 
-- , (RollingPeopleVaccinated/population)*100
from new_schema.covid_deaths dea
join new_schema.covid_vaccinations vac
 on dea.location = vac.location
 and dea.date = vac.date 
 where dea.continent is not null
 order by 2, 3


-- USE CTE 
With PopvsVac (Continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as 
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as float)) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated 
-- , (RollingPeopleVaccinated/population)*100
from new_schema.covid_deaths dea
join new_schema.covid_vaccinations vac
 on dea.location = vac.location
 and dea.date = vac.date 
 where dea.continent is not null
 -- order by 2, 3
);
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac;


-- TEMP TABLE
 DROP Table if exists PercentPopulationVaccinated;
Create Table PercentPopulationVaccinated 
(
continent varchar(255),
Location varchar(255),
date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
); 
Insert into PercentPopulationVaccinated; 
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as float)) OVER (Partition by dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated; 
-- , (RollingPeopleVaccinated/population)*100
from new_schema.covid_deaths dea
join new_schema.covid_vaccinations vac
 on dea.location = vac.location
 and dea.date = vac.date;
 -- where dea.continent is not null
 -- order by 2, 3

Select *, (RollingPeopleVaccinated/Population)*100
From PercentPopulationVaccinated;


-- Create view for visualization
-- Drop table if EXISTS PercentPopulationVaccinated
Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as float)) OVER (Partition by dea.location Order by dea.location, dea.Date) as RollingPeopleVaccinated 
-- , (RollingPeopleVaccinated/population)*100
from new_schema.covid_deaths dea
join new_schema.covid_vaccinations vac
 on dea.location = vac.location
 and dea.date = vac.date 
 where dea.continent is not null;
 -- order by 2, 3


Select *
From PercentPopulationVaccinated;









